<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.future.common.mapper.JmsJobMapper">
  <resultMap id="BaseResultMap" type="com.future.common.model.JmsJob">
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="title" jdbcType="VARCHAR" property="title" />
    <result column="tag" jdbcType="VARCHAR" property="tag" />
    <result column="company" jdbcType="VARCHAR" property="company" />
    <result column="area" jdbcType="VARCHAR" property="area" />
    <result column="addr" jdbcType="VARCHAR" property="addr" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="pub_time" jdbcType="TIMESTAMP" property="pubTime" />
    <result column="status" jdbcType="INTEGER" property="status" />
    <result column="like_num" jdbcType="INTEGER" property="likeNum" />
    <result column="comment_num" jdbcType="INTEGER" property="commentNum" />
    <result column="collect_num" jdbcType="INTEGER" property="collectNum" />
    <result column="salary" jdbcType="DECIMAL" property="salary" />
    <result column="salary_unit" jdbcType="INTEGER" property="salaryUnit" />
    <result column="del" jdbcType="INTEGER" property="del" />
    <result column="work_date" jdbcType="VARCHAR" property="workDate" />
    <result column="detail" jdbcType="VARCHAR" property="detail" />
    <result column="filter" jdbcType="VARCHAR" property="filter" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, title, tag, company, area, addr, create_time, pub_time, status, like_num, comment_num, 
    collect_num, salary, salary_unit, del, work_date, detail, filter
  </sql>
  <select id="selectByExample" parameterType="com.future.common.model.JmsJobExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from jms_job
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from jms_job
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from jms_job
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="com.future.common.model.JmsJobExample">
    delete from jms_job
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.future.common.model.JmsJob">
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Long">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into jms_job (title, tag, company, 
      area, addr, create_time, 
      pub_time, status, like_num, 
      comment_num, collect_num, salary, 
      salary_unit, del, work_date, 
      detail, filter)
    values (#{title,jdbcType=VARCHAR}, #{tag,jdbcType=VARCHAR}, #{company,jdbcType=VARCHAR}, 
      #{area,jdbcType=VARCHAR}, #{addr,jdbcType=VARCHAR}, #{createTime,jdbcType=TIMESTAMP}, 
      #{pubTime,jdbcType=TIMESTAMP}, #{status,jdbcType=INTEGER}, #{likeNum,jdbcType=INTEGER}, 
      #{commentNum,jdbcType=INTEGER}, #{collectNum,jdbcType=INTEGER}, #{salary,jdbcType=DECIMAL}, 
      #{salaryUnit,jdbcType=INTEGER}, #{del,jdbcType=INTEGER}, #{workDate,jdbcType=VARCHAR}, 
      #{detail,jdbcType=VARCHAR}, #{filter,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.future.common.model.JmsJob">
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Long">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into jms_job
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="title != null">
        title,
      </if>
      <if test="tag != null">
        tag,
      </if>
      <if test="company != null">
        company,
      </if>
      <if test="area != null">
        area,
      </if>
      <if test="addr != null">
        addr,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="pubTime != null">
        pub_time,
      </if>
      <if test="status != null">
        status,
      </if>
      <if test="likeNum != null">
        like_num,
      </if>
      <if test="commentNum != null">
        comment_num,
      </if>
      <if test="collectNum != null">
        collect_num,
      </if>
      <if test="salary != null">
        salary,
      </if>
      <if test="salaryUnit != null">
        salary_unit,
      </if>
      <if test="del != null">
        del,
      </if>
      <if test="workDate != null">
        work_date,
      </if>
      <if test="detail != null">
        detail,
      </if>
      <if test="filter != null">
        filter,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="title != null">
        #{title,jdbcType=VARCHAR},
      </if>
      <if test="tag != null">
        #{tag,jdbcType=VARCHAR},
      </if>
      <if test="company != null">
        #{company,jdbcType=VARCHAR},
      </if>
      <if test="area != null">
        #{area,jdbcType=VARCHAR},
      </if>
      <if test="addr != null">
        #{addr,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="pubTime != null">
        #{pubTime,jdbcType=TIMESTAMP},
      </if>
      <if test="status != null">
        #{status,jdbcType=INTEGER},
      </if>
      <if test="likeNum != null">
        #{likeNum,jdbcType=INTEGER},
      </if>
      <if test="commentNum != null">
        #{commentNum,jdbcType=INTEGER},
      </if>
      <if test="collectNum != null">
        #{collectNum,jdbcType=INTEGER},
      </if>
      <if test="salary != null">
        #{salary,jdbcType=DECIMAL},
      </if>
      <if test="salaryUnit != null">
        #{salaryUnit,jdbcType=INTEGER},
      </if>
      <if test="del != null">
        #{del,jdbcType=INTEGER},
      </if>
      <if test="workDate != null">
        #{workDate,jdbcType=VARCHAR},
      </if>
      <if test="detail != null">
        #{detail,jdbcType=VARCHAR},
      </if>
      <if test="filter != null">
        #{filter,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.future.common.model.JmsJobExample" resultType="java.lang.Long">
    select count(*) from jms_job
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update jms_job
    <set>
      <if test="row.id != null">
        id = #{row.id,jdbcType=BIGINT},
      </if>
      <if test="row.title != null">
        title = #{row.title,jdbcType=VARCHAR},
      </if>
      <if test="row.tag != null">
        tag = #{row.tag,jdbcType=VARCHAR},
      </if>
      <if test="row.company != null">
        company = #{row.company,jdbcType=VARCHAR},
      </if>
      <if test="row.area != null">
        area = #{row.area,jdbcType=VARCHAR},
      </if>
      <if test="row.addr != null">
        addr = #{row.addr,jdbcType=VARCHAR},
      </if>
      <if test="row.createTime != null">
        create_time = #{row.createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="row.pubTime != null">
        pub_time = #{row.pubTime,jdbcType=TIMESTAMP},
      </if>
      <if test="row.status != null">
        status = #{row.status,jdbcType=INTEGER},
      </if>
      <if test="row.likeNum != null">
        like_num = #{row.likeNum,jdbcType=INTEGER},
      </if>
      <if test="row.commentNum != null">
        comment_num = #{row.commentNum,jdbcType=INTEGER},
      </if>
      <if test="row.collectNum != null">
        collect_num = #{row.collectNum,jdbcType=INTEGER},
      </if>
      <if test="row.salary != null">
        salary = #{row.salary,jdbcType=DECIMAL},
      </if>
      <if test="row.salaryUnit != null">
        salary_unit = #{row.salaryUnit,jdbcType=INTEGER},
      </if>
      <if test="row.del != null">
        del = #{row.del,jdbcType=INTEGER},
      </if>
      <if test="row.workDate != null">
        work_date = #{row.workDate,jdbcType=VARCHAR},
      </if>
      <if test="row.detail != null">
        detail = #{row.detail,jdbcType=VARCHAR},
      </if>
      <if test="row.filter != null">
        filter = #{row.filter,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="example != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update jms_job
    set id = #{row.id,jdbcType=BIGINT},
      title = #{row.title,jdbcType=VARCHAR},
      tag = #{row.tag,jdbcType=VARCHAR},
      company = #{row.company,jdbcType=VARCHAR},
      area = #{row.area,jdbcType=VARCHAR},
      addr = #{row.addr,jdbcType=VARCHAR},
      create_time = #{row.createTime,jdbcType=TIMESTAMP},
      pub_time = #{row.pubTime,jdbcType=TIMESTAMP},
      status = #{row.status,jdbcType=INTEGER},
      like_num = #{row.likeNum,jdbcType=INTEGER},
      comment_num = #{row.commentNum,jdbcType=INTEGER},
      collect_num = #{row.collectNum,jdbcType=INTEGER},
      salary = #{row.salary,jdbcType=DECIMAL},
      salary_unit = #{row.salaryUnit,jdbcType=INTEGER},
      del = #{row.del,jdbcType=INTEGER},
      work_date = #{row.workDate,jdbcType=VARCHAR},
      detail = #{row.detail,jdbcType=VARCHAR},
      filter = #{row.filter,jdbcType=VARCHAR}
    <if test="example != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.future.common.model.JmsJob">
    update jms_job
    <set>
      <if test="title != null">
        title = #{title,jdbcType=VARCHAR},
      </if>
      <if test="tag != null">
        tag = #{tag,jdbcType=VARCHAR},
      </if>
      <if test="company != null">
        company = #{company,jdbcType=VARCHAR},
      </if>
      <if test="area != null">
        area = #{area,jdbcType=VARCHAR},
      </if>
      <if test="addr != null">
        addr = #{addr,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="pubTime != null">
        pub_time = #{pubTime,jdbcType=TIMESTAMP},
      </if>
      <if test="status != null">
        status = #{status,jdbcType=INTEGER},
      </if>
      <if test="likeNum != null">
        like_num = #{likeNum,jdbcType=INTEGER},
      </if>
      <if test="commentNum != null">
        comment_num = #{commentNum,jdbcType=INTEGER},
      </if>
      <if test="collectNum != null">
        collect_num = #{collectNum,jdbcType=INTEGER},
      </if>
      <if test="salary != null">
        salary = #{salary,jdbcType=DECIMAL},
      </if>
      <if test="salaryUnit != null">
        salary_unit = #{salaryUnit,jdbcType=INTEGER},
      </if>
      <if test="del != null">
        del = #{del,jdbcType=INTEGER},
      </if>
      <if test="workDate != null">
        work_date = #{workDate,jdbcType=VARCHAR},
      </if>
      <if test="detail != null">
        detail = #{detail,jdbcType=VARCHAR},
      </if>
      <if test="filter != null">
        filter = #{filter,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.future.common.model.JmsJob">
    update jms_job
    set title = #{title,jdbcType=VARCHAR},
      tag = #{tag,jdbcType=VARCHAR},
      company = #{company,jdbcType=VARCHAR},
      area = #{area,jdbcType=VARCHAR},
      addr = #{addr,jdbcType=VARCHAR},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      pub_time = #{pubTime,jdbcType=TIMESTAMP},
      status = #{status,jdbcType=INTEGER},
      like_num = #{likeNum,jdbcType=INTEGER},
      comment_num = #{commentNum,jdbcType=INTEGER},
      collect_num = #{collectNum,jdbcType=INTEGER},
      salary = #{salary,jdbcType=DECIMAL},
      salary_unit = #{salaryUnit,jdbcType=INTEGER},
      del = #{del,jdbcType=INTEGER},
      work_date = #{workDate,jdbcType=VARCHAR},
      detail = #{detail,jdbcType=VARCHAR},
      filter = #{filter,jdbcType=VARCHAR}
    where id = #{id,jdbcType=BIGINT}
  </update>
</mapper>